#import <Foundation/Foundation.h>
#import "NGSClient.h"
#import "NGSCreateClientRequest.h"
#import "NGSProblemDetails.h"
#import "NGSUpdateClientRequest.h"
#import "NGSApi.h"

/**
* Stardust API
* Stardust is the supporting API for the ProAssist app
*
* OpenAPI spec version: v2
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface NGSClientsApi: NSObject <NGSApi>

extern NSString* kNGSClientsApiErrorDomain;
extern NSInteger kNGSClientsApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(NGSApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Creates a Client API Key Status -- Completed
/// 
///
/// @param clientIdentifier The ClientIdentifier of the client to be updated.
/// 
///  code:200 message:"The API Key for the client.",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return NSString*
-(NSURLSessionTask*) addApiKeyWithClientIdentifier: (NSString*) clientIdentifier
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Creates a new client based on client name and a list of Application Names. A client can have one or more Application Names. Example: ABC Restoration is associated with DASH Application 'dash-uat' and MICA Application 'mica-uat' Status -- Completed
/// 
///
/// @param request Contains values for creating a client, such as Client Name, and a List of Application Names the client is associated with.
/// 
///  code:201 message:"The response contains the client.",
///  code:400 message:"",
///  code:401 message:""
///
/// @return NSString*
-(NSURLSessionTask*) createWithRequest: (NGSCreateClientRequest*) request
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Gets a client based on client identifier Status -- Completed
/// 
///
/// @param clientIdentifier The Client Identifier of the desired client
/// 
///  code:200 message:"Returns the client.",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return NGSClient*
-(NSURLSessionTask*) getClientByIdentifierWithClientIdentifier: (NSString*) clientIdentifier
    completionHandler: (void (^)(NGSClient* output, NSError* error)) handler;


/// Returns a list of clients based on Application Name Status -- Completed
/// 
///
/// @param applicationName The Application Name used to query clients
/// 
///  code:200 message:"Returns a list of clients based on Application Name",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return NSArray<NGSClient>*
-(NSURLSessionTask*) getClientsBySystemIdWithApplicationName: (NSString*) applicationName
    completionHandler: (void (^)(NSArray<NGSClient>* output, NSError* error)) handler;


/// Allows a client to be updated based on ClientIdentifier and a list of Application Names For example, if you wanted to associate an existing client with another application, you would use this endpoint. You would also use this endpoint to remove an application association with a client. Example: ABC Restoration is associated with DASH Application dash-svm and needs also to associated with MICA Application mica-uat. Status -- Completed
/// 
///
/// @param clientIdentifier The ClientIdentifier of the client to be updated.
/// @param request Contains values for updating a client, such as Client Name, and a list of Source System Ids the client is associated with.
/// 
///  code:200 message:"200 if the update was successful.",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return void
-(NSURLSessionTask*) updateWithClientIdentifier: (NSString*) clientIdentifier
    request: (NGSUpdateClientRequest*) request
    completionHandler: (void (^)(NSError* error)) handler;



@end
