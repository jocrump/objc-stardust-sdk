#import <Foundation/Foundation.h>
#import "NGSCreateInviteRequest.h"
#import "NGSDeleteInviteRequest.h"
#import "NGSInviteParticipantResponse.h"
#import "NGSInviteResponse.h"
#import "NGSProblemDetails.h"
#import "NGSApi.h"

/**
* Stardust API
* Stardust is the supporting API for the ProAssist app
*
* OpenAPI spec version: v2
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/



@interface NGSInvitesApi: NSObject <NGSApi>

extern NSString* kNGSInvitesApiErrorDomain;
extern NSInteger kNGSInvitesApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(NGSApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// 
///
/// @param applicationName 
/// @param request 
/// @param xClientIdentifier Client Identifier (default to Set Client Identifier)
/// @param xAPIKey Client API Key (default to Set Key)
/// 
///  code:200 message:"",
///  code:201 message:"",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return NSArray<NGSInviteParticipantResponse>*
-(NSURLSessionTask*) deleteParticipantInviteWithApplicationName: (NSString*) applicationName
    request: (NGSDeleteInviteRequest*) request
    xClientIdentifier: (NSString*) xClientIdentifier
    xAPIKey: (NSString*) xAPIKey
    completionHandler: (void (^)(NSArray<NGSInviteParticipantResponse>* output, NSError* error)) handler;


/// 
/// 
///
/// @param appName 
/// @param resourceType 
/// @param identifier 
/// @param applicationName 
/// @param xClientIdentifier Client Identifier (default to Set Client Identifier)
/// @param xAPIKey Client API Key (default to Set Key)
/// 
///  code:200 message:"",
///  code:201 message:"",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return NSArray<NGSInviteParticipantResponse>*
-(NSURLSessionTask*) getInviteRecipientsByResourcePathWithAppName: (NSString*) appName
    resourceType: (NSString*) resourceType
    identifier: (NSString*) identifier
    applicationName: (NSString*) applicationName
    xClientIdentifier: (NSString*) xClientIdentifier
    xAPIKey: (NSString*) xAPIKey
    completionHandler: (void (^)(NSArray<NGSInviteParticipantResponse>* output, NSError* error)) handler;


/// 
/// 
///
/// @param applicationName 
/// @param resourceType 
/// @param identifier 
/// @param xClientIdentifier Client Identifier (default to Set Client Identifier)
/// @param xAPIKey Client API Key (default to Set Key)
/// 
///  code:200 message:"",
///  code:201 message:"",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return NSArray<NGSInviteResponse>*
-(NSURLSessionTask*) getInvitesByResourcePathWithApplicationName: (NSString*) applicationName
    resourceType: (NSString*) resourceType
    identifier: (NSString*) identifier
    xClientIdentifier: (NSString*) xClientIdentifier
    xAPIKey: (NSString*) xAPIKey
    completionHandler: (void (^)(NSArray<NGSInviteResponse>* output, NSError* error)) handler;


/// Sends invites to customers. Links are generated programmatically.
/// 
///
/// @param applicationName The Application Name of the calling application
/// @param request Contains a list of invites to send
/// @param xClientIdentifier Client Identifier (default to Set Client Identifier)
/// @param xAPIKey Client API Key (default to Set Key)
/// 
///  code:200 message:"Sends invites to customers.",
///  code:400 message:"",
///  code:401 message:"",
///  code:404 message:""
///
/// @return NGSInviteResponse*
-(NSURLSessionTask*) sendInviteWithApplicationName: (NSString*) applicationName
    request: (NGSCreateInviteRequest*) request
    xClientIdentifier: (NSString*) xClientIdentifier
    xAPIKey: (NSString*) xAPIKey
    completionHandler: (void (^)(NGSInviteResponse* output, NSError* error)) handler;



@end
